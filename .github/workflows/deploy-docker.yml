name: Build and Deploy to Docker Hub and EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: ddalgiwuu/n3rve-platform

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Stop and remove existing container
          docker stop n3rve-app || true
          docker rm n3rve-app || true
          
          # Pull latest image
          docker pull ${{ env.DOCKER_IMAGE }}:latest
          
          # Run new container with all environment variables
          docker run -d \
            --name n3rve-app \
            -p 80:80 \
            -p 443:443 \
            -v /etc/letsencrypt:/etc/letsencrypt:ro \
            -e NODE_ENV=production \
            -e PORT=3001 \
            -e MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            -e DATABASE_URL='${{ secrets.MONGODB_URI }}' \
            -e JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            -e JWT_REFRESH_SECRET='${{ secrets.JWT_REFRESH_SECRET }}' \
            -e GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}' \
            -e GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
            -e GOOGLE_CALLBACK_URL='https://n3rve-onboarding.com/api/auth/google/callback' \
            -e CORS_ORIGIN='https://n3rve-onboarding.com' \
            --restart unless-stopped \
            ${{ env.DOCKER_IMAGE }}:latest
          
          # Clean up old images
          docker image prune -f