name: Simple Docker Hub Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
          # Stop and remove existing containers
          docker stop \$(docker ps -aq) || true
          docker rm \$(docker ps -aq) || true
          
          # Clean up
          docker system prune -af
          
          # Pull latest images
          docker pull ${DOCKER_USERNAME}/n3rve-frontend:latest
          docker pull ${DOCKER_USERNAME}/n3rve-backend:latest
          
          # Create directories if needed
          mkdir -p ~/n3rve-platform/backend/uploads
          mkdir -p ~/n3rve-platform/ssl
          
          # Create Docker network
          docker network create n3rve-network || true
          
          # Create simple nginx config for HTTP first
          cat > ~/n3rve-platform/default.conf << 'NGINX_EOF'
server {
    listen 80;
    server_name n3rve-onboarding.com www.n3rve-onboarding.com;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html;
    
    # API proxy
    location /api {
        proxy_pass http://n3rve-backend:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
    
    # Handle React Router
    location / {
        try_files \$uri \$uri/ /index.html;
    }
}
NGINX_EOF
          
          # Run backend container
          docker run -d --name n3rve-backend \
            --network n3rve-network \
            -e NODE_ENV=production \
            -e PORT=5001 \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            -e JWT_EXPIRES_IN=7d \
            -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            -e FRONTEND_URL=https://n3rve-onboarding.com \
            -e CORS_ORIGIN="https://n3rve-onboarding.com,http://n3rve-onboarding.com,http://localhost:5173" \
            -v ~/n3rve-platform/backend/uploads:/app/uploads \
            ${DOCKER_USERNAME}/n3rve-backend:latest
          
          # Run frontend container with custom nginx config
          docker run -d --name n3rve-frontend \
            --network n3rve-network \
            -p 80:80 -p 443:443 \
            -v ~/n3rve-platform/default.conf:/etc/nginx/conf.d/default.conf:ro \
            ${DOCKER_USERNAME}/n3rve-frontend:latest
          
          # Show status
          docker ps
          
          # Check logs
          echo "=== Backend logs ==="
          docker logs n3rve-backend --tail=20
          echo "=== Frontend logs ==="
          docker logs n3rve-frontend --tail=20
          echo "Deployment completed!"
        EOF