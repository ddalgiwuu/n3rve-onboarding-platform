name: Build and Deploy via Docker Hub

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/n3rve-frontend:latest
        build-args: |
          VITE_API_URL=https://n3rve-onboarding.com/api
          VITE_DROPBOX_APP_KEY=slffi4mfztfohqd
          VITE_DROPBOX_REDIRECT_URI=https://n3rve-onboarding.com/dropbox-callback
          VITE_DROPBOX_ACCESS_TOKEN=${{ secrets.VITE_DROPBOX_ACCESS_TOKEN }}
    
    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/n3rve-backend:latest
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ubuntu
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
          cd ~/n3rve-platform
          
          # Stop all containers
          docker stop \$(docker ps -aq) || true
          docker rm \$(docker ps -aq) || true
          
          # Clean up
          docker system prune -af
          
          # Pull latest images
          docker pull ${DOCKER_USERNAME}/n3rve-frontend:latest
          docker pull ${DOCKER_USERNAME}/n3rve-backend:latest
          
          # Run containers
          docker run -d --name n3rve-backend \
            --network host \
            --env-file .env \
            -v \$(pwd)/backend/uploads:/app/uploads \
            ${DOCKER_USERNAME}/n3rve-backend:latest
          
          docker run -d --name n3rve-frontend \
            -p 80:80 -p 443:443 \
            -v \$(pwd)/docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro \
            -v /etc/letsencrypt:/etc/letsencrypt:ro \
            ${DOCKER_USERNAME}/n3rve-frontend:latest
          
          # Show status
          docker ps
        EOF